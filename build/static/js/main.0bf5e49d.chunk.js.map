{"version":3,"sources":["compoents/Input.js","compoents/List.js","compoents/TodoList.js","index.js"],"names":["Input","props","addNewTodo","refs","mytext","value","obj","title","done","addTodo","console","log","htmlFor","id","ref","type","onChange","this","handleChange","onClick","Component","List","renderTodos","todos","map","todo","idx","toggle","checked","dangerouslySetInnerHTML","__html","delTodo","arr1","length","arr2","style","color","TodoList","e","setState","inpValue","target","item","state","push","filter","index","newTodos","JSON","parse","stringify","localStorage","getItem","setItem","bind","ReactDOM","render","document","getElementById"],"mappings":"2LAoCeA,G,wDAjCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEVC,WAAa,WACT,GAA6B,IAA1B,EAAKC,KAAKC,OAAOC,MAApB,CAIA,IAAIC,EAAI,CACJC,MAAO,EAAKJ,KAAKC,OAAOC,MACxBG,MAAK,GAET,EAAKP,MAAMQ,QAAQH,GACnB,EAAKH,KAAKC,OAAOC,MAAM,QARnBK,QAAQC,IAAI,QALF,E,qDAgBd,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAI,SACJC,KAAK,OACLC,SAAUC,KAAKhB,MAAMiB,eAEzB,4BACIC,QAASF,KAAKf,YADlB,qB,GA1BIkB,cCkCLC,E,kDAjCX,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IAEVqB,YAAc,SAACd,GACX,OAAO,EAAKP,MAAMsB,MAAMC,KAAI,SAACC,EAAMC,GAC/B,GAAGlB,GAAQiB,EAAKjB,KACZ,OAAQ,4BACJ,2BACIW,QAAS,kBAAI,EAAKlB,MAAM0B,OAAOD,IAC/BE,QAASpB,EACTO,KAAK,aACT,0BAAMc,wBAAyB,CAACC,OAAOL,EAAKlB,SAC5C,4BAAQY,QAAS,kBAAI,EAAKlB,MAAM8B,QAAQL,KAAxC,qBAZE,E,qDAkBd,OACI,6BACI,uDAAST,KAAKhB,MAAM+B,KAAKC,QACzB,4BACKhB,KAAKK,aAAY,IAEtB,uDAASL,KAAKhB,MAAMiC,KAAKD,QACzB,wBAAIE,MAAO,CAACC,MAAgB,UACvBnB,KAAKK,aAAY,S,GA3BnBF,aCmEJiB,E,kDA/DX,WAAYpC,GAAO,IAAD,8BACd,cAAMA,IAMViB,aAAe,SAACoB,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOpC,SARnB,EAwBlBI,QAAU,SAACiC,GACP,EAAKC,MAAMpB,MAAMqB,KAAKF,GACtB,EAAKH,SAAS,CAAChB,MAAM,EAAKoB,MAAMpB,SA1BlB,EA4BlBQ,QAAU,SAACL,GACP,EAAKa,SAAS,CACVhB,MAAM,EAAKoB,MAAMpB,MAAMsB,QAAO,SAACH,EAAKI,GAAN,OAAcA,GAAOpB,QA9BzC,EAiClBC,OAAS,SAACmB,GACN,IAAIC,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKP,MAAMpB,QACpDwB,EAASD,GAAOtC,MAAQuC,EAASD,GAAOtC,KACxC,EAAK+B,SAAS,CACVhB,MAAMwB,KAnCV,EAAKJ,MAAQ,CACTH,SAAU,GACVjB,MAAM,CAAC,CAAChB,MAAM,4BAASC,MAAK,GAAO,CAACD,MAAM,4BAASC,MAAK,KAJ9C,E,gEAWb,IAAIe,EAAQ4B,aAAaC,QAAQ,SAC9B7B,GACCN,KAAKsB,SAAS,CACVhB,MAAMyB,KAAKC,MAAM1B,O,2CAK1B4B,aAAaE,QACT,QACAL,KAAKE,UAAUjC,KAAK0B,MAAMpB,U,+BAmBzB,IAAD,EACsBN,KAAK0B,MAAxBpB,EADH,EACGA,MACHS,GAFA,EACUQ,SACHjB,EAAMsB,QAAO,SAAAH,GAAI,OAAGA,EAAKlC,SAChC0B,EAAOX,EAAMsB,QAAO,SAAAH,GAAI,OAAEA,EAAKlC,QACnC,OACI,6BACI,kBAAC,EAAD,CACIU,aAAcD,KAAKC,aACnBT,QAASQ,KAAKR,QAAQ6C,KAAKrC,QAE/B,kBAAC,EAAD,CACIM,MAAON,KAAK0B,MAAMpB,MAClBI,OAAQV,KAAKU,OACbI,QAASd,KAAKc,QACdY,MAAO1B,KAAK0B,MACZX,KAAMA,EACNE,KAAMA,S,GAzDHd,aCDvBmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0bf5e49d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    addNewTodo = ()=>{\r\n        if(this.refs.mytext.value == ''){\r\n            console.log(\"kkk\");\r\n            return;\r\n        }\r\n        var obj={\r\n            title: this.refs.mytext.value,\r\n            done:false\r\n        }\r\n        this.props.addTodo(obj);\r\n        this.refs.mytext.value=\"\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor='inp'>todolist</label>\r\n                <input\r\n                    id='inp'\r\n                    ref='mytext'\r\n                    type='text'\r\n                    onChange={this.props.handleChange}    \r\n                />\r\n                <button\r\n                    onClick={this.addNewTodo}\r\n                >添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.props.todos.map((todo, idx)=>{\r\n            if(done == todo.done){\r\n                return  <li>\r\n                    <input\r\n                        onClick={()=>this.props.toggle(idx)} \r\n                        checked={done} \r\n                        type='checkbox'/>\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.props.delTodo(idx)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>正在进行{this.props.arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{this.props.arr2.length}</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react'\r\nimport './control.css'\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\nclass TodoList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[{title:'正在进行1', done:false},{title:'已经完成1', done:true}]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n         let todos = localStorage.getItem('todos');\r\n         if(todos){\r\n             this.setState({\r\n                 todos:JSON.parse(todos)\r\n             })\r\n         }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = (item)=>{\r\n        this.state.todos.push(item);\r\n        this.setState({todos:this.state.todos});\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        })\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    render(){\r\n        const {todos, inpValue} = this.state;\r\n        let arr1 = todos.filter(item=>!item.done);\r\n        let arr2 = todos.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n                <Input \r\n                    handleChange={this.handleChange} \r\n                    addTodo={this.addTodo.bind(this)}\r\n                />\r\n                <List \r\n                    todos={this.state.todos}\r\n                    toggle={this.toggle}\r\n                    delTodo={this.delTodo}\r\n                    state={this.state}\r\n                    arr1={arr1} \r\n                    arr2={arr2}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoList from './compoents/TodoList'\r\n\r\nReactDOM.render(\r\n  <TodoList/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}